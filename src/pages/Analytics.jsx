// src/pages/Analytics.jsx
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Bar, Doughnut } from 'react-chartjs-2';
import {
  Chart as ChartJS,
  BarElement,
  CategoryScale,
  LinearScale,
  ArcElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';
import '../styles/pages/Analytics.css';

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Chart.js
ChartJS.register(BarElement, CategoryScale, LinearScale, ArcElement, Title, Tooltip, Legend);

const Analytics = () => {
  const navigate = useNavigate();
  const userId = 'user1'; // –ü—Ä–∏–º–µ—Ä ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [analytics, setAnalytics] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    const fetchAnalytics = async () => {
      try {
        setLoading(true);
        // –ú–æ–∫-–¥–∞–Ω–Ω—ã–µ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API-–∑–∞–ø—Ä–æ—Å)
        const mockAnalytics = {
          registeredDate: '2024-05-15',
          totalTimeWatched: '120 —á–∞—Å–æ–≤',
          totalWatched: { movies: 15, anime: 10, series: 8 },
          kazakhContentTime: '40 —á–∞—Å–æ–≤',
          kazakhContentTotal: 12,
          bestContent: '–ö”©—à–ø–µ–Ω–¥—ñ–ª–µ—Ä (2018)',
          reviewsCount: 5,
          averageRatingData: { 1: 1, 3: 2, 5: 2 },
          averageReviewWords: 25,
          favoritesCount: 7,
          lastMonthTime: { hours: 20 },
          timeBreakdown: { movies: 50, anime: 30, series: 20 },
          topGenres: ['Drama', 'Action', 'Comedy'],
        };
        setAnalytics(mockAnalytics);
      } catch (err) {
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É');
        console.error('Error:', err);
      } finally {
        setLoading(false);
      }
    };
    fetchAnalytics();
  }, [userId]);

  if (loading) return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...</div>;
  if (error) return <div className="error">{error}</div>;
  if (!analytics) return <div className="error">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</div>;

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã "–í—Ä–µ–º—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü"
  const monthChartData = {
    labels: ['–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü'],
    datasets: [
      {
        label: '–ß–∞—Å—ã',
        data: [analytics.lastMonthTime.hours],
        backgroundColor: '#4a90e2',
        borderColor: '#357abd',
        borderWidth: 1,
      },
    ],
  };

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã "–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏"
  const timeBreakdownData = {
    labels: ['–ö–∏–Ω–æ', '–ê–Ω–∏–º–µ', '–°–µ—Ä–∏–∞–ª—ã'],
    datasets: [
      {
        data: [
          analytics.timeBreakdown.movies,
          analytics.timeBreakdown.anime,
          analytics.timeBreakdown.series,
        ],
        backgroundColor: ['#4a90e2', '#ff6b6b', '#50c878'],
        borderWidth: 1,
      },
    ],
  };

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã "–û—Ü–µ–Ω–∫–∏"
  const ratingData = {
    labels: ['1 –∑–≤–µ–∑–¥–∞', '3 –∑–≤–µ–∑–¥—ã', '5 –∑–≤–µ–∑–¥'],
    datasets: [
      {
        label: '–û—Ü–µ–Ω–∫–∏',
        data: [
          analytics.averageRatingData[1] || 0,
          analytics.averageRatingData[3] || 0,
          analytics.averageRatingData[5] || 0,
        ],
        backgroundColor: ['#ff6b6b', '#ffcc00', '#50c878'],
        borderColor: ['#ff8787', '#e6b800', '#45b76b'],
        borderWidth: 1,
      },
    ],
  };

  // –û–ø—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º
  const chartOptions = {
    responsive: true,
    maintainAspectRatio: false,
    scales: {
      y: {
        beginAtZero: true,
        title: {
          display: true,
          text: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
        },
      },
    },
    plugins: {
      legend: {
        display: false,
      },
      title: {
        display: true,
      },
    },
  };

  const doughnutOptions = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: 'bottom',
      },
    },
  };

  return (
    <div className="analytics-page">
      <div className="analytics-container">
        <h1>üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
        <div className="analytics-content">
          <div className="analytics-left">
            <div className="analytics-item">
              <h2>–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              <p>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {analytics.registeredDate}</p>
              <p>–í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ: {analytics.totalTimeWatched}</p>
              <ul>
                <li>–ö–∏–Ω–æ: {analytics.totalWatched.movies}</li>
                <li>–ê–Ω–∏–º–µ: {analytics.totalWatched.anime}</li>
                <li>–°–µ—Ä–∏–∞–ª—ã: {analytics.totalWatched.series}</li>
              </ul>
              <p>–ö–∞–∑–∞—Ö—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç: {analytics.kazakhContentTotal} —Ñ–∏–ª—å–º–æ–≤ ({analytics.kazakhContentTime})</p>
              <p>–õ—É—á—à–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç: {analytics.bestContent}</p>
              <p>–û—Å—Ç–∞–≤–ª–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {analytics.reviewsCount}</p>
              <p>–°—Ä–µ–¥–Ω–µ–µ —Å–ª–æ–≤ –≤ –æ—Ç–∑—ã–≤–µ: {analytics.averageReviewWords}</p>
              <p>–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º: {analytics.favoritesCount}</p>
            </div>
          </div>
          <div className="analytics-right">
            <div className="chart-block">
              <h3>–í—Ä–µ–º—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü</h3>
              <div style={{ height: '200px' }}>
                <Bar data={monthChartData} options={chartOptions} />
              </div>
            </div>

            <div className="chart-block">
              <h3>–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ (–ö–∏–Ω–æ/–ê–Ω–∏–º–µ/–°–µ—Ä–∏–∞–ª—ã)</h3>
              <div style={{ height: '200px' }}>
                <Doughnut data={timeBreakdownData} options={doughnutOptions} />
              </div>
            </div>

            <div className="chart-block">
              <h3>–û—Ü–µ–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
              <div style={{ height: '200px' }}>
                <Bar data={ratingData} options={chartOptions} />
              </div>
            </div>

            {analytics.topGenres.map((genre, index) => {
              const genreData = {
                labels: ['–ü—Ä–æ—Å–º–æ—Ç—Ä—ã'],
                datasets: [
                  {
                    label: genre,
                    data: [Math.floor(Math.random() * 10) + 5],
                    backgroundColor: ['#4a90e2', '#ff6b6b', '#50c878'][index % 3],
                    borderColor: ['#357abd', '#ff8787', '#45b76b'][index % 3],
                    borderWidth: 1,
                  },
                ],
              };
              return (
                <div key={genre} className="chart-block">
                  <h3>–ñ–∞–Ω—Ä: {genre}</h3>
                  <div style={{ height: '200px' }}>
                    <Bar data={genreData} options={chartOptions} />
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Analytics;